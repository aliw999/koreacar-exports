import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { Badge } from '@/components/ui/badge';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Switch } from '@/components/ui/switch';
import { DollarSign, TrendingUp, Clock, Calculator, Download, Send, FileText, AlertTriangle, CheckCircle, Settings as SettingsIcon, Mail, Calendar, CreditCard } from 'lucide-react';
const Financial = () => {
  const [currency, setCurrency] = useState('KRW');

  // KPI Data
  const kpiData = [{
    title: '–ü—Ä–æ–¥–∞–∂–∏ –∑–∞ –º–µ—Å—è—Ü',
    valueKRW: '‚Ç© 450,000,000',
    valueUSD: '$337,500',
    change: '+15%',
    trend: 'up',
    icon: DollarSign,
    description: '–∫ –ø—Ä–æ—à–ª–æ–º—É –º–µ—Å—è—Ü—É'
  }, {
    title: '–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏',
    valueKRW: '12 –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π',
    valueUSD: '$2,850,000',
    change: '+3',
    trend: 'up',
    icon: TrendingUp,
    description: '–≤ —Ä–∞–±–æ—Ç–µ'
  }, {
    title: '–ö –ø–æ–ª—É—á–µ–Ω–∏—é',
    valueKRW: '‚Ç© 180,000,000',
    valueUSD: '$135,000',
    change: '7 –¥–Ω–µ–π',
    trend: 'neutral',
    icon: Clock,
    description: '—Å—Ä–µ–¥–Ω–µ–µ'
  }, {
    title: '–°—Ä–µ–¥–Ω–∏–π —á–µ–∫',
    valueKRW: '‚Ç© 37,500,000',
    valueUSD: '$28,125',
    change: '+8.5%',
    trend: 'up',
    icon: Calculator,
    description: '–∑–∞ —Å–¥–µ–ª–∫—É'
  }];

  // Sales Data
  const salesData = [{
    date: '15.09.25',
    car: 'Hyundai Sonata 2023',
    buyer: 'ABC Motors',
    country: 'üá∞üáø',
    amountKRW: '‚Ç© 35,000,000',
    amountUSD: '$26,250',
    status: 'paid'
  }, {
    date: '12.09.25',
    car: 'Kia Sportage 2024',
    buyer: 'DEF Auto',
    country: 'üá∫üáø',
    amountKRW: '‚Ç© 42,000,000',
    amountUSD: '$31,500',
    status: 'pending'
  }, {
    date: '10.09.25',
    car: 'Genesis G90 2023',
    buyer: 'XYZ Trading',
    country: 'üá∞üáø',
    amountKRW: '‚Ç© 65,000,000',
    amountUSD: '$48,750',
    status: 'paid'
  }, {
    date: '08.09.25',
    car: 'Hyundai Tucson 2024',
    buyer: 'AutoWorld',
    country: 'üá∫üáø',
    amountKRW: '‚Ç© 38,000,000',
    amountUSD: '$28,500',
    status: 'overdue'
  }];

  // Pending Payments
  const pendingPayments = [{
    car: 'Hyundai Tucson 2024',
    buyer: 'ABC Motors',
    country: 'Kazakhstan',
    amountKRW: '‚Ç© 38,000,000',
    amountUSD: '$28,500',
    dueDate: '28.09.2025',
    daysLeft: 3,
    status: 'pending'
  }, {
    car: 'Kia Sorento 2023',
    buyer: 'XYZ Trading',
    country: 'Uzbekistan',
    amountKRW: '‚Ç© 45,000,000',
    amountUSD: '$33,750',
    dueDate: '20.09.2025',
    daysLeft: -5,
    status: 'overdue'
  }];

  // Commission Data
  const commissionData = [{
    period: '–°–µ–Ω—Ç—è–±—Ä—å 2025',
    turnover: '‚Ç© 180,000,000',
    commission: '‚Ç© 9,000,000',
    status: 'accrued',
    date: '05.10.2025'
  }, {
    period: '–ê–≤–≥—É—Å—Ç 2025',
    turnover: '‚Ç© 220,000,000',
    commission: '‚Ç© 11,000,000',
    status: 'paid',
    date: '05.09.2025'
  }, {
    period: '–ò—é–ª—å 2025',
    turnover: '‚Ç© 195,000,000',
    commission: '‚Ç© 9,750,000',
    status: 'paid',
    date: '05.08.2025'
  }];

  // Top Countries Data
  const topCountries = [{
    name: '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω',
    sales: 45,
    percentage: 42
  }, {
    name: '–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω',
    sales: 32,
    percentage: 30
  }, {
    name: '–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω',
    sales: 18,
    percentage: 17
  }, {
    name: '–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω',
    sales: 12,
    percentage: 11
  }];

  // Monthly Sales Data
  const monthlySales = [{
    month: '–ú–∞—Ä—Ç',
    amount: 320
  }, {
    month: '–ê–ø—Ä–µ–ª—å',
    amount: 280
  }, {
    month: '–ú–∞–π',
    amount: 380
  }, {
    month: '–ò—é–Ω—å',
    amount: 420
  }, {
    month: '–ò—é–ª—å',
    amount: 390
  }, {
    month: '–ê–≤–≥—É—Å—Ç',
    amount: 440
  }, {
    month: '–°–µ–Ω—Ç—è–±—Ä—å',
    amount: 450
  }];
  const getStatusBadge = (status: string) => {
    switch (status) {
      case 'paid':
        return <Badge variant="default" className="bg-green-500">–û–ø–ª–∞—á–µ–Ω–æ</Badge>;
      case 'pending':
        return <Badge variant="outline">–û–∂–∏–¥–∞–Ω–∏–µ</Badge>;
      case 'overdue':
        return <Badge variant="destructive">–ü—Ä–æ—Å—Ä–æ—á–∫–∞</Badge>;
      case 'accrued':
        return <Badge variant="secondary">–ù–∞—á–∏—Å–ª–µ–Ω–æ</Badge>;
      default:
        return <Badge variant="outline">{status}</Badge>;
    }
  };
  return <div className="space-y-6">
      {/* Header */}
      <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
        <div>
          <h1 className="text-3xl font-bold text-foreground">–§–∏–Ω–∞–Ω—Å—ã</h1>
          <p className="text-muted-foreground">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –∏ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
          </p>
        </div>
        
      </div>

      {/* KPI Cards */}
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
        {kpiData.map((kpi, index) => <Card key={index} className="bg-card-gradient border-border/50 hover:shadow-medium transition-all duration-300">
            <CardHeader className="pb-2">
              <div className="flex items-center justify-between">
                <CardTitle className="text-sm font-medium text-muted-foreground">
                  {kpi.title}
                </CardTitle>
                <kpi.icon className="h-4 w-4 text-muted-foreground" />
              </div>
            </CardHeader>
            <CardContent>
              <div className="space-y-2">
                <div className="text-2xl font-bold">
                  {currency === 'KRW' ? kpi.valueKRW : kpi.valueUSD}
                </div>
                <div className="flex items-center gap-1 text-sm">
                  {kpi.trend === 'up' && <TrendingUp className="h-3 w-3 text-green-500" />}
                  <span className={kpi.trend === 'up' ? "text-green-600" : "text-muted-foreground"}>
                    {kpi.change}
                  </span>
                  <span className="text-muted-foreground text-xs">
                    {kpi.description}
                  </span>
                </div>
              </div>
            </CardContent>
          </Card>)}
      </div>

      {/* Charts */}
      <div className="grid lg:grid-cols-2 gap-6">
        {/* Monthly Sales Chart */}
        <Card className="bg-card-gradient border-border/50">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <TrendingUp className="h-5 w-5" />
              –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –º–µ—Å—è—Ü–∞–º
            </CardTitle>
            <CardDescription>
              –î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –º–µ—Å—è—Ü–µ–≤ (–º–ª–Ω ‚Ç©)
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {monthlySales.map((data, index) => <div key={index} className="flex items-center justify-between p-3 rounded-lg hover:bg-muted/30 transition-colors">
                  <div className="font-medium">{data.month}</div>
                  <div className="flex items-center gap-4">
                    <div className="w-32 bg-muted rounded-full h-2">
                      <div className="bg-primary h-2 rounded-full transition-all duration-300" style={{
                    width: `${data.amount / 500 * 100}%`
                  }} />
                    </div>
                    <span className="font-medium text-sm min-w-16">{data.amount}M</span>
                  </div>
                </div>)}
            </div>
          </CardContent>
        </Card>

        {/* Top Countries Chart */}
        <Card className="bg-card-gradient border-border/50">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <DollarSign className="h-5 w-5" />
              –¢–æ–ø-5 —Å—Ç—Ä–∞–Ω –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π
            </CardTitle>
            <CardDescription>
              –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {topCountries.map((country, index) => <div key={index} className="flex items-center justify-between p-3 rounded-lg hover:bg-muted/30 transition-colors">
                  <div className="font-medium">{country.name}</div>
                  <div className="flex items-center gap-4">
                    <div className="w-32 bg-muted rounded-full h-2">
                      <div className="bg-primary h-2 rounded-full transition-all duration-300" style={{
                    width: `${country.percentage}%`
                  }} />
                    </div>
                    <span className="font-medium text-sm min-w-16">{country.sales} –∞–≤—Ç–æ</span>
                  </div>
                </div>)}
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Tabs */}
      <Tabs defaultValue="sales" className="w-full">
        <TabsList className="grid w-full grid-cols-4">
          <TabsTrigger value="sales">–ü—Ä–æ–¥–∞–∂–∏</TabsTrigger>
          <TabsTrigger value="pending">–ö –ø–æ–ª—É—á–µ–Ω–∏—é</TabsTrigger>
          <TabsTrigger value="commissions">–ö–æ–º–∏—Å—Å–∏–∏</TabsTrigger>
          <TabsTrigger value="documents">–î–æ–∫—É–º–µ–Ω—Ç—ã</TabsTrigger>
        </TabsList>

        {/* Sales Tab */}
        <TabsContent value="sales">
          <Card>
            <CardHeader>
              <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
                <CardTitle>–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–¥–∞–∂</CardTitle>
                <div className="flex gap-2">
                  <Select defaultValue="all">
                    <SelectTrigger className="w-40">
                      <SelectValue placeholder="–°—Ç–∞—Ç—É—Å" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</SelectItem>
                      <SelectItem value="paid">–û–ø–ª–∞—á–µ–Ω–æ</SelectItem>
                      <SelectItem value="pending">–û–∂–∏–¥–∞–Ω–∏–µ</SelectItem>
                      <SelectItem value="overdue">–ü—Ä–æ—Å—Ä–æ—á–∫–∞</SelectItem>
                    </SelectContent>
                  </Select>
                  <Button variant="outline" size="sm">
                    <Download className="mr-2 h-4 w-4" />
                    –≠–∫—Å–ø–æ—Ä—Ç
                  </Button>
                </div>
              </div>
            </CardHeader>
            <CardContent>
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>–î–∞—Ç–∞</TableHead>
                    <TableHead>–ê–≤—Ç–æ–º–æ–±–∏–ª—å</TableHead>
                    <TableHead>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å</TableHead>
                    <TableHead>–°—É–º–º–∞</TableHead>
                    <TableHead>–°—Ç–∞—Ç—É—Å</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {salesData.map((sale, index) => <TableRow key={index}>
                      <TableCell>{sale.date}</TableCell>
                      <TableCell className="font-medium">{sale.car}</TableCell>
                      <TableCell>
                        {sale.buyer} {sale.country}
                      </TableCell>
                      <TableCell>
                        <div className="space-y-1">
                          <div>{currency === 'KRW' ? sale.amountKRW : sale.amountUSD}</div>
                          <div className="text-xs text-muted-foreground">
                            {currency === 'KRW' ? sale.amountUSD : sale.amountKRW}
                          </div>
                        </div>
                      </TableCell>
                      <TableCell>{getStatusBadge(sale.status)}</TableCell>
                    </TableRow>)}
                </TableBody>
              </Table>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Pending Payments Tab */}
        <TabsContent value="pending">
          <Card>
            <CardHeader>
              <CardTitle>–û–∂–∏–¥–∞–µ–º—ã–µ –ø–ª–∞—Ç–µ–∂–∏</CardTitle>
              <CardDescription>
                –°—á–µ—Ç–∞ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é –∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {pendingPayments.map((payment, index) => <Card key={index} className={`p-4 ${payment.status === 'overdue' ? 'border-red-200 bg-red-50/50 dark:border-red-800 dark:bg-red-950/20' : ''}`}>
                    <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
                      <div className="space-y-2">
                        <div className="font-semibold">{payment.car}</div>
                        <div className="text-sm text-muted-foreground">
                          {payment.buyer} ({payment.country})
                        </div>
                        <div className="text-lg font-bold">
                          {currency === 'KRW' ? payment.amountKRW : payment.amountUSD}
                        </div>
                        <div className="flex items-center gap-2 text-sm">
                          {payment.status === 'overdue' ? <AlertTriangle className="h-4 w-4 text-red-500" /> : <Clock className="h-4 w-4 text-orange-500" />}
                          {payment.status === 'overdue' ? <span className="text-red-600">–ü—Ä–æ—Å—Ä–æ—á–∫–∞: {Math.abs(payment.daysLeft)} –¥–Ω–µ–π</span> : <span className="text-muted-foreground">
                              –°—Ä–æ–∫ –æ–ø–ª–∞—Ç—ã: {payment.dueDate} (—á–µ—Ä–µ–∑ {payment.daysLeft} –¥–Ω—è)
                            </span>}
                        </div>
                      </div>
                      <div className="flex flex-col gap-2 min-w-40">
                        <Button size="sm" className="w-full">
                          <Send className="mr-2 h-4 w-4" />
                          {payment.status === 'overdue' ? '–°–≤—è–∑–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ'}
                        </Button>
                        <Button variant="outline" size="sm" className="w-full">
                          <FileText className="mr-2 h-4 w-4" />
                          –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω–≤–æ–π—Å
                        </Button>
                      </div>
                    </div>
                  </Card>)}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Commissions Tab */}
        <TabsContent value="commissions">
          <Card>
            <CardHeader>
              <CardTitle>–ö–æ–º–∏—Å—Å–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</CardTitle>
              <CardDescription>
                –ò—Å—Ç–æ—Ä–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π –∏ —Å–ø–∏—Å–∞–Ω–∏–π –∫–æ–º–∏—Å—Å–∏–π (5% —Å –æ–±–æ—Ä–æ—Ç–∞)
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>–ü–µ—Ä–∏–æ–¥</TableHead>
                    <TableHead>–û–±–æ—Ä–æ—Ç</TableHead>
                    <TableHead>–ö–æ–º–∏—Å—Å–∏—è (5%)</TableHead>
                    <TableHead>–°—Ç–∞—Ç—É—Å</TableHead>
                    <TableHead>–î–∞—Ç–∞ —Å–ø–∏—Å–∞–Ω–∏—è</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {commissionData.map((commission, index) => <TableRow key={index}>
                      <TableCell className="font-medium">{commission.period}</TableCell>
                      <TableCell>{commission.turnover}</TableCell>
                      <TableCell className="font-semibold">{commission.commission}</TableCell>
                      <TableCell>{getStatusBadge(commission.status)}</TableCell>
                      <TableCell>{commission.date}</TableCell>
                    </TableRow>)}
                </TableBody>
              </Table>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Documents Tab */}
        <TabsContent value="documents">
          <Card>
            <CardHeader>
              <CardTitle>–î–æ–∫—É–º–µ–Ω—Ç—ã –∏ –æ—Ç—á–µ—Ç—ã</CardTitle>
              <CardDescription>
                –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏ –∏ –Ω–∞–ª–æ–≥–æ–≤–æ–π
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                <Card className="p-4">
                  <div className="flex items-center gap-3 mb-3">
                    <FileText className="h-8 w-8 text-blue-600" />
                    <div>
                      <div className="font-semibold">–ò–Ω–≤–æ–π—Å—ã</div>
                      <div className="text-sm text-muted-foreground">–ü–æ –ø—Ä–æ–¥–∞–∂–∞–º</div>
                    </div>
                  </div>
                  <Button className="w-full" size="sm">
                    <Download className="mr-2 h-4 w-4" />
                    –°–∫–∞—á–∞—Ç—å PDF
                  </Button>
                </Card>

                <Card className="p-4">
                  <div className="flex items-center gap-3 mb-3">
                    <FileText className="h-8 w-8 text-green-600" />
                    <div>
                      <div className="font-semibold">–û—Ç—á–µ—Ç –æ –ø—Ä–æ–¥–∞–∂–∞—Ö</div>
                      <div className="text-sm text-muted-foreground">–ú–µ—Å—è—Ü/–∫–≤–∞—Ä—Ç–∞–ª</div>
                    </div>
                  </div>
                  <Button className="w-full" size="sm" variant="outline">
                    <Download className="mr-2 h-4 w-4" />
                    –°–∫–∞—á–∞—Ç—å Excel
                  </Button>
                </Card>

                <Card className="p-4">
                  <div className="flex items-center gap-3 mb-3">
                    <CreditCard className="h-8 w-8 text-purple-600" />
                    <div>
                      <div className="font-semibold">–°–ø—Ä–∞–≤–∫–∞ –æ –∫–æ–º–∏—Å—Å–∏—è—Ö</div>
                      <div className="text-sm text-muted-foreground">–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞</div>
                    </div>
                  </div>
                  <Button className="w-full" size="sm" variant="outline">
                    <Download className="mr-2 h-4 w-4" />
                    –°–∫–∞—á–∞—Ç—å PDF
                  </Button>
                </Card>

                <Card className="p-4">
                  <div className="flex items-center gap-3 mb-3">
                    <FileText className="h-8 w-8 text-orange-600" />
                    <div>
                      <div className="font-semibold">–î–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞–ª–æ–≥–æ–≤–æ–π</div>
                      <div className="text-sm text-muted-foreground">–≠–∫—Å–ø–æ—Ä—Ç</div>
                    </div>
                  </div>
                  <Button className="w-full" size="sm" variant="outline">
                    <Download className="mr-2 h-4 w-4" />
                    –≠–∫—Å–ø–æ—Ä—Ç Excel
                  </Button>
                </Card>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

      </Tabs>
    </div>;
};
export default Financial;